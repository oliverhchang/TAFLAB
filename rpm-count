#include <Wire.h>
#include <Adafruit_INA219.h>

// Power monitoring pins and constants
const int voltagePin1 = A0;
const int voltagePin2 = A1;
const float Vref = 5.0;
const float ADC_resolution = 1024.0;
const float R1 = 22000.0;
const float R2 = 4700.0;
Adafruit_INA219 ina219;

// RPM monitoring
const int hallPin = 2;
volatile unsigned long lastPulseTime = 0;
volatile unsigned long pulseInterval = 0;
volatile bool newPulseReceived = false;

// RPM calculation variables
float currentRPM = 0;
const int numReadings = 5;
float rpmReadings[numReadings];
int readIndex = 0;
float rpmTotal = 0;
float averageRPM = 0;

// Edge detection for Hall sensor
volatile bool lastState = HIGH;
volatile unsigned long lastStateChangeTime = 0;
const unsigned long minPulseWidth = 5;

// Timing variables
unsigned long lastDataTime = 0;
const unsigned long dataInterval = 500; // 500ms data collection interval

void setup() {
  Serial.begin(115200);
  delay(1000);
  
  // Initialize INA219
  if (!ina219.begin()) {
    Serial.println("Failed to find INA219 chip. Check wiring.");
    while (1);
  }
  
  // Initialize RPM monitoring
  pinMode(hallPin, INPUT);
  attachInterrupt(digitalPinToInterrupt(hallPin), detectMagnet, CHANGE);
  
  // Initialize RPM readings array
  for (int i = 0; i < numReadings; i++) {
    rpmReadings[i] = 0;
  }
  
  // Print header for data
  Serial.println("Time(s)\tCap_V(V)\tBoost_V(V)\tCurrent(mA)\tPower(mW)\tRPM\tAvg_RPM");
}

void loop() {
  unsigned long now = millis();
  
  // Update RPM calculation if new pulse received
  if (newPulseReceived && pulseInterval > 0) {
    newPulseReceived = false;
    
    // Calculate RPM from pulse interval
    currentRPM = 60000.0 / pulseInterval;
    
    // Update rolling average
    rpmTotal = rpmTotal - rpmReadings[readIndex];
    rpmReadings[readIndex] = currentRPM;
    rpmTotal = rpmTotal + rpmReadings[readIndex];
    readIndex = (readIndex + 1) % numReadings;
    averageRPM = rpmTotal / numReadings;
  }
  
  // Reset RPM if no pulse for 2 seconds (stopped)
  if (now - lastPulseTime > 2000) {
    currentRPM = 0;
    averageRPM = 0;
    for (int i = 0; i < numReadings; i++) {
      rpmReadings[i] = 0;
    }
    rpmTotal = 0;
  }
  
  // Collect and output data every 500ms
  if (now - lastDataTime >= dataInterval) {
    float t = now / 1000.0;
    
    // Read voltage measurements
    int raw1 = analogRead(voltagePin1);
    int raw2 = analogRead(voltagePin2);
    float v_at_pin1 = (raw1 * Vref) / ADC_resolution;
    float v_at_pin2 = (raw2 * Vref) / ADC_resolution;
    float voltage1 = v_at_pin1 * (R1 + R2) / R2;
    float voltage2 = v_at_pin2 * (R1 + R2) / R2;
    
    // Read current and calculate power
    float current_mA = ina219.getCurrent_mA();
    float power_mW = (current_mA / 1000.0) * voltage2 * 1000.0;
    
    // Output all data in tab-separated format
    Serial.print(t, 2); Serial.print("\t");
    Serial.print(voltage1, 2); Serial.print("\t\t");
    Serial.print(voltage2, 2); Serial.print("\t\t");
    Serial.print(current_mA, 1); Serial.print("\t\t");
    Serial.print(power_mW, 1); Serial.print("\t\t");
    Serial.print(currentRPM, 0); Serial.print("\t");
    Serial.println(averageRPM, 0);
    
    lastDataTime = now;
  }
}

void detectMagnet() {
  unsigned long currentTime = millis();
  bool currentState = digitalRead(hallPin);
  
  if (currentTime - lastStateChangeTime < minPulseWidth) {
    return;
  }
  
  if (lastState == HIGH && currentState == LOW) {
    // Calculate interval between pulses
    if (lastPulseTime > 0) {
      pulseInterval = currentTime - lastPulseTime;
      newPulseReceived = true;
    }
    lastPulseTime = currentTime;
  }
  
  lastState = currentState;
  lastStateChangeTime = currentTime;
}
